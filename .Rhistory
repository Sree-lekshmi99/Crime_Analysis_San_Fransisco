# Fit the VAR(1) model
library(vars)
var1.model <- VAR(combined_ts, p = 1, type = "const")
summary(var1.model)
var_result <- VARselect(combined_ts, lag.max = 10, type = "both")
optimal_lag <- var_result$selection
print(optimal_lag)
library(vars)
library(readr)
library(tseries)
library(urca)
library(ggplot2)
library(reprex)
library(zoo)
library(dplyr)
library(tidyverse)
library(lubridate)
library(readxl)
library(vars)
cdgvs_xl <- read_excel("xlx/CDGVS.xlsx")
cdgvs_xl$Value <- as.numeric(cdgvs_xl$Value)
cdgvs_xl <- cdgvs_xl %>% mutate(Period = as.Date(paste0(Period, "-01"), format="%b-%Y-%d"))
cdgvs_xl <- cdgvs_xl %>% filter(format(Period, "%Y") != "2024")
head(cdgvs_xl)
sum(is.na(cdgvs_xl))
ggplot(cdgvs_xl, aes(x=Period, y=Value)) + geom_line() + labs(title="Time Series of CDGVS Value", x="Period", y="Value")
cgvs_xl <- read_excel("xlx/CGVS.xlsx")
cgvs_xl$Value <- as.numeric(cgvs_xl$Value)
cgvs_xl <- cgvs_xl %>% mutate(Period = as.Date(paste0(Period, "-01"), format="%b-%Y-%d"))
head(cgvs_xl)
sum(is.na(cgvs_xl))
cgvs_xl <- cgvs_xl %>% filter(format(Period, "%Y") != "2024")
# Plot the series
ggplot(cgvs_xl, aes(x=Period, y=Value)) + geom_line() + labs(title="Time Series of CGVS Value", x="Period", y="Value")
cngvs_xl <- read_excel("xlx/CNGVS.xlsx")
cngvs_xl$Value <- as.numeric(cngvs_xl$Value)
cngvs_xl <- cngvs_xl %>% mutate(Period = as.Date(paste0(Period, "-01"), format="%b-%Y-%d"))
head(cngvs_xl)
cngvs_xl <- cngvs_xl %>% filter(format(Period, "%Y") != "2024")
sum(is.na(cngvs_xl))
# Plot the series
ggplot(cngvs_xl, aes(x=Period, y=Value)) + geom_line() + labs(title="Time Series of CNGVS Value", x="Period", y="Value")
dgvs_xl <- read_excel("xlx/DGVS.xlsx")
dgvs_xl$Value <- as.numeric(dgvs_xl$Value)
dgvs_xl <- dgvs_xl %>% mutate(Period = as.Date(paste0(Period, "-01"), format="%b-%Y-%d"))
head(dgvs_xl)
dgvs_xl <- dgvs_xl %>% filter(format(Period, "%Y") != "2024")
sum(is.na(dgvs_xl))
# Plot the series
ggplot(dgvs_xl, aes(x=Period, y=Value)) + geom_line() + labs(title="Time Series of DGVS Value", x="Period", y="Value")
#DECOMPISTION
cdgvs_ts_data <- ts(cdgvs_xl$Value, start=c(1992, 1), frequency=12)
decomposed_cdgvs <- decompose(cdgvs_ts_data)
plot(decomposed_cdgvs)
cgvs_ts_data <- ts(cgvs_xl$Value, start=c(1992, 1), frequency=12)
decomposed_cgvs <- decompose(cgvs_ts_data)
plot(decomposed_cgvs)
cngvs_ts_data <- ts(cngvs_xl$Value, start=c(1992, 1), frequency=12)
decomposed_cngvs <- decompose(cngvs_ts_data)
plot(decomposed_cngvs)
dgvs_ts_data <- ts(dgvs_xl$Value, start=c(1992, 1), frequency=12)
decomposed_dgvs <- decompose(dgvs_ts_data)
plot(decomposed_dgvs)
#ADF TESTS
cdgvs_adf_result <- adf.test(cdgvs_ts_data)
cdgvs_adf_result
cgvs_adf_result <- adf.test(cgvs_ts_data)
cgvs_adf_result
dgvs_adf_result <- adf.test(dgvs_ts_data)
dgvs_adf_result
cngvs_adf_result <- adf.test(cngvs_ts_data)
cngvs_adf_result
#All the series turned to be non staionary now we will difference them and test adf again\
series1_diff <- diff(cgvs_ts_data, differences = 1)
series2_diff <- diff(cdgvs_ts_data, differences = 1)
series3_diff <- diff(dgvs_ts_data, differences =1 )
series4_diff <- diff(cngvs_ts_data, differences = 1)
adf_test_series1 <- adf.test(series1_diff)
adf_test_series2 <- adf.test(series2_diff)
adf_test_series3 <- adf.test(series3_diff)
adf_test_series4 <- adf.test(series4_diff)
#NOW combining all the series together for VAR model
combined_ts <- cbind(cngvs_ts_data, cgvs_ts_data, cdgvs_ts_data, dgvs_ts_data)
str(combined_ts)
df_simplified <- combined_ts[, c('dgvs_ts_data', 'cgvs_ts_data', 'cdgvs_ts_data', 'cngvs_ts_data')]
# Fit the VAR(1) model
var1.model <- VAR(combined_ts, p = 1, type = "const")
summary(var1.model)
#For optimal lag for VAR Model
var_result <- VARselect(combined_ts, lag.max = 10, type = "both")
optimal_lag <- var_result$selection
print(optimal_lag)
# Fit the VAR(4) model based on the optimal lag length
var4.model <- VAR(combined_ts, p = 4, type = "const")
summary(var4.model)
#Forecasting the values
forecast <- predict(var4.model, n.ahead = 1, ci = 0.95) # ci is the confidence interval and I gave the threshhold of 0.95
print(forecast)
library(vars)
library(readr)
library(tseries)
library(urca)
library(ggplot2)
library(reprex)
library(zoo)
library(dplyr)
library(tidyverse)
library(lubridate)
library(readxl)
library(vars)
cdgvs_xl <- read_excel("xlx/CDGVS.xlsx")
cdgvs_xl$Value <- as.numeric(cdgvs_xl$Value)
cdgvs_xl <- cdgvs_xl %>% mutate(Period = as.Date(paste0(Period, "-01"), format="%b-%Y-%d"))
cdgvs_xl <- cdgvs_xl %>% filter(format(Period, "%Y") != "2024")
head(cdgvs_xl)
sum(is.na(cdgvs_xl))
ggplot(cdgvs_xl, aes(x=Period, y=Value)) + geom_line() + labs(title="Time Series of CDGVS Value", x="Period", y="Value")
cgvs_xl <- read_excel("xlx/CGVS.xlsx")
cgvs_xl$Value <- as.numeric(cgvs_xl$Value)
cgvs_xl <- cgvs_xl %>% mutate(Period = as.Date(paste0(Period, "-01"), format="%b-%Y-%d"))
head(cgvs_xl)
sum(is.na(cgvs_xl))
cgvs_xl <- cgvs_xl %>% filter(format(Period, "%Y") != "2024")
# Plot the series
ggplot(cgvs_xl, aes(x=Period, y=Value)) + geom_line() + labs(title="Time Series of CGVS Value", x="Period", y="Value")
cngvs_xl <- read_excel("xlx/CNGVS.xlsx")
cngvs_xl$Value <- as.numeric(cngvs_xl$Value)
cngvs_xl <- cngvs_xl %>% mutate(Period = as.Date(paste0(Period, "-01"), format="%b-%Y-%d"))
head(cngvs_xl)
cngvs_xl <- cngvs_xl %>% filter(format(Period, "%Y") != "2024")
sum(is.na(cngvs_xl))
# Plot the series
ggplot(cngvs_xl, aes(x=Period, y=Value)) + geom_line() + labs(title="Time Series of CNGVS Value", x="Period", y="Value")
dgvs_xl <- read_excel("xlx/DGVS.xlsx")
dgvs_xl$Value <- as.numeric(dgvs_xl$Value)
dgvs_xl <- dgvs_xl %>% mutate(Period = as.Date(paste0(Period, "-01"), format="%b-%Y-%d"))
head(dgvs_xl)
dgvs_xl <- dgvs_xl %>% filter(format(Period, "%Y") != "2024")
sum(is.na(dgvs_xl))
# Plot the series
ggplot(dgvs_xl, aes(x=Period, y=Value)) + geom_line() + labs(title="Time Series of DGVS Value", x="Period", y="Value")
#DECOMPISTION
cdgvs_ts_data <- ts(cdgvs_xl$Value, start=c(1992, 1), frequency=12)
decomposed_cdgvs <- decompose(cdgvs_ts_data)
plot(decomposed_cdgvs)
cgvs_ts_data <- ts(cgvs_xl$Value, start=c(1992, 1), frequency=12)
decomposed_cgvs <- decompose(cgvs_ts_data)
plot(decomposed_cgvs)
cngvs_ts_data <- ts(cngvs_xl$Value, start=c(1992, 1), frequency=12)
decomposed_cngvs <- decompose(cngvs_ts_data)
plot(decomposed_cngvs)
dgvs_ts_data <- ts(dgvs_xl$Value, start=c(1992, 1), frequency=12)
decomposed_dgvs <- decompose(dgvs_ts_data)
plot(decomposed_dgvs)
#ADF TESTS
cdgvs_adf_result <- adf.test(cdgvs_ts_data)
cdgvs_adf_result
cgvs_adf_result <- adf.test(cgvs_ts_data)
cgvs_adf_result
dgvs_adf_result <- adf.test(dgvs_ts_data)
dgvs_adf_result
cngvs_adf_result <- adf.test(cngvs_ts_data)
cngvs_adf_result
#All the series turned to be non staionary now we will difference them and test adf again\
series1_diff <- diff(cgvs_ts_data, differences = 1)
series2_diff <- diff(cdgvs_ts_data, differences = 1)
series3_diff <- diff(dgvs_ts_data, differences =1 )
series4_diff <- diff(cngvs_ts_data, differences = 1)
adf_test_series1 <- adf.test(series1_diff)
adf_test_series2 <- adf.test(series2_diff)
adf_test_series3 <- adf.test(series3_diff)
adf_test_series4 <- adf.test(series4_diff)
#NOW combining all the series together for VAR model
combined_ts <- cbind(cngvs_ts_data, cgvs_ts_data, cdgvs_ts_data, dgvs_ts_data)
str(combined_ts)
df_simplified <- combined_ts[, c('dgvs_ts_data', 'cgvs_ts_data', 'cdgvs_ts_data', 'cngvs_ts_data')]
# Fit the VAR(1) model
var1.model <- VAR(combined_ts, p = 1, type = "const")
summary(var1.model)
#For optimal lag for VAR Model
var_result <- VARselect(combined_ts, lag.max = 10, type = "both")
optimal_lag <- var_result$selection
print(optimal_lag)
# Fit the VAR(4) model based on the optimal lag length
var4.model <- VAR(combined_ts, p = 4, type = "const")
summary(var4.model)
#Forecasting the values
forecast <- predict(var4.model, n.ahead = 1, ci = 0.95) # ci is the confidence interval and I gave the threshhold of 0.95
print(forecast)
#Granger Test
granger_test <- causality(var4.model)
print(granger_test)
#Apply BigVAR with BASIC struct
library(BigVAR)
combined_matrix <- cbind(cgvs_ts_data, cdgvs_ts_data, cngvs_ts_data, dgvs_ts_data)
sparse_var_fit <- BigVAR.fit(Y=combined_matrix,struct='Basic',p=2,lambda=1)[,,1]
print(sparse_var_fit)
summary(sparse_var_fit)
reprex()
library(vars)
library(readr)
library(tseries)
library(urca)
library(ggplot2)
library(reprex)
library(zoo)
library(dplyr)
library(tidyverse)
library(lubridate)
library(readxl)
library(vars)
library(BigVAR)
cdgvs_xl <- read_excel("xlx/CDGVS.xlsx")
cdgvs_xl$Value <- as.numeric(cdgvs_xl$Value)
cdgvs_xl <- cdgvs_xl %>% mutate(Period = as.Date(paste0(Period, "-01"), format="%b-%Y-%d"))
cdgvs_xl <- cdgvs_xl %>% filter(format(Period, "%Y") != "2024")
head(cdgvs_xl)
sum(is.na(cdgvs_xl))
ggplot(cdgvs_xl, aes(x=Period, y=Value)) + geom_line() + labs(title="Time Series of CDGVS Value", x="Period", y="Value")
cgvs_xl <- read_excel("xlx/CGVS.xlsx")
cgvs_xl$Value <- as.numeric(cgvs_xl$Value)
cgvs_xl <- cgvs_xl %>% mutate(Period = as.Date(paste0(Period, "-01"), format="%b-%Y-%d"))
head(cgvs_xl)
sum(is.na(cgvs_xl))
cgvs_xl <- cgvs_xl %>% filter(format(Period, "%Y") != "2024")
# Plot the series
ggplot(cgvs_xl, aes(x=Period, y=Value)) + geom_line() + labs(title="Time Series of CGVS Value", x="Period", y="Value")
cngvs_xl <- read_excel("xlx/CNGVS.xlsx")
cngvs_xl$Value <- as.numeric(cngvs_xl$Value)
cngvs_xl <- cngvs_xl %>% mutate(Period = as.Date(paste0(Period, "-01"), format="%b-%Y-%d"))
head(cngvs_xl)
cngvs_xl <- cngvs_xl %>% filter(format(Period, "%Y") != "2024")
sum(is.na(cngvs_xl))
# Plot the series
ggplot(cngvs_xl, aes(x=Period, y=Value)) + geom_line() + labs(title="Time Series of CNGVS Value", x="Period", y="Value")
dgvs_xl <- read_excel("xlx/DGVS.xlsx")
dgvs_xl$Value <- as.numeric(dgvs_xl$Value)
dgvs_xl <- dgvs_xl %>% mutate(Period = as.Date(paste0(Period, "-01"), format="%b-%Y-%d"))
head(dgvs_xl)
dgvs_xl <- dgvs_xl %>% filter(format(Period, "%Y") != "2024")
sum(is.na(dgvs_xl))
# Plot the series
ggplot(dgvs_xl, aes(x=Period, y=Value)) + geom_line() + labs(title="Time Series of DGVS Value", x="Period", y="Value")
#DECOMPISTION
cdgvs_ts_data <- ts(cdgvs_xl$Value, start=c(1992, 1), frequency=12)
decomposed_cdgvs <- decompose(cdgvs_ts_data)
plot(decomposed_cdgvs)
cgvs_ts_data <- ts(cgvs_xl$Value, start=c(1992, 1), frequency=12)
decomposed_cgvs <- decompose(cgvs_ts_data)
plot(decomposed_cgvs)
cngvs_ts_data <- ts(cngvs_xl$Value, start=c(1992, 1), frequency=12)
decomposed_cngvs <- decompose(cngvs_ts_data)
plot(decomposed_cngvs)
dgvs_ts_data <- ts(dgvs_xl$Value, start=c(1992, 1), frequency=12)
decomposed_dgvs <- decompose(dgvs_ts_data)
plot(decomposed_dgvs)
#ADF TESTS
cdgvs_adf_result <- adf.test(cdgvs_ts_data)
cdgvs_adf_result
cgvs_adf_result <- adf.test(cgvs_ts_data)
cgvs_adf_result
dgvs_adf_result <- adf.test(dgvs_ts_data)
dgvs_adf_result
cngvs_adf_result <- adf.test(cngvs_ts_data)
cngvs_adf_result
#All the series turned to be non staionary now we will difference them and test adf again\
series1_diff <- diff(cgvs_ts_data, differences = 1)
series2_diff <- diff(cdgvs_ts_data, differences = 1)
series3_diff <- diff(dgvs_ts_data, differences =1 )
series4_diff <- diff(cngvs_ts_data, differences = 1)
adf_test_series1 <- adf.test(series1_diff)
adf_test_series2 <- adf.test(series2_diff)
adf_test_series3 <- adf.test(series3_diff)
adf_test_series4 <- adf.test(series4_diff)
#NOW combining all the series together for VAR model
combined_ts <- cbind(cngvs_ts_data, cgvs_ts_data, cdgvs_ts_data, dgvs_ts_data)
str(combined_ts)
df_simplified <- combined_ts[, c('dgvs_ts_data', 'cgvs_ts_data', 'cdgvs_ts_data', 'cngvs_ts_data')]
# Fit the VAR(1) model
var1.model <- VAR(combined_ts, p = 1, type = "const")
summary(var1.model)
#For optimal lag for VAR Model
var_result <- VARselect(combined_ts, lag.max = 10, type = "both")
optimal_lag <- var_result$selection
print(optimal_lag)
# Fit the VAR(4) model based on the optimal lag length
var4.model <- VAR(combined_ts, p = 4, type = "const")
summary(var4.model)
#Forecasting the values
forecast <- predict(var4.model, n.ahead = 1, ci = 0.95) # ci is the confidence interval and I gave the threshhold of 0.95
print(forecast)
#Granger Test
granger_test <- causality(var4.model)
print(granger_test)
#Apply BigVAR with BASIC struct
combined_matrix <- cbind(cgvs_ts_data, cdgvs_ts_data, cngvs_ts_data, dgvs_ts_data)
sparse_var_fit <- BigVAR.fit(Y=combined_matrix,struct='Basic',p=2,lambda=1)[,,1]
print(sparse_var_fit)
summary(sparse_var_fit)
reprex()
reprex()
library(vars)
library(readr)
library(tseries)
library(urca)
library(ggplot2)
library(reprex)
library(zoo)
library(dplyr)
library(tidyverse)
library(lubridate)
library(readxl)
library(vars)
library(BigVAR)
cdgvs_xl <- read_excel("C:\\Users\\Sree Lekshmi P\\Documents\\h4\\xlx\\CDGVS.xlsx")
cdgvs_xl$Value <- as.numeric(cdgvs_xl$Value)
cdgvs_xl <- cdgvs_xl %>% mutate(Period = as.Date(paste0(Period, "-01"), format="%b-%Y-%d"))
cdgvs_xl <- cdgvs_xl %>% filter(format(Period, "%Y") != "2024")
head(cdgvs_xl)
sum(is.na(cdgvs_xl))
ggplot(cdgvs_xl, aes(x=Period, y=Value)) + geom_line() + labs(title="Time Series of CDGVS Value", x="Period", y="Value")
cgvs_xl <- read_excel("C:\\Users\\Sree Lekshmi P\\Documents\\h4\\xlx\\CGVS.xlsx")
cgvs_xl$Value <- as.numeric(cgvs_xl$Value)
cgvs_xl <- cgvs_xl %>% mutate(Period = as.Date(paste0(Period, "-01"), format="%b-%Y-%d"))
head(cgvs_xl)
sum(is.na(cgvs_xl))
cgvs_xl <- cgvs_xl %>% filter(format(Period, "%Y") != "2024")
# Plot the series
ggplot(cgvs_xl, aes(x=Period, y=Value)) + geom_line() + labs(title="Time Series of CGVS Value", x="Period", y="Value")
cngvs_xl <- read_excel("C:\\Users\\Sree Lekshmi P\\Documents\\h4\\xlx\\CNGVS.xlsx")
cngvs_xl$Value <- as.numeric(cngvs_xl$Value)
cngvs_xl <- cngvs_xl %>% mutate(Period = as.Date(paste0(Period, "-01"), format="%b-%Y-%d"))
head(cngvs_xl)
cngvs_xl <- cngvs_xl %>% filter(format(Period, "%Y") != "2024")
sum(is.na(cngvs_xl))
# Plot the series
ggplot(cngvs_xl, aes(x=Period, y=Value)) + geom_line() + labs(title="Time Series of CNGVS Value", x="Period", y="Value")
dgvs_xl <- read_excel("C:\\Users\\Sree Lekshmi P\\Documents\\h4\\xlx\\DGVS.xlsx")
dgvs_xl$Value <- as.numeric(dgvs_xl$Value)
dgvs_xl <- dgvs_xl %>% mutate(Period = as.Date(paste0(Period, "-01"), format="%b-%Y-%d"))
head(dgvs_xl)
dgvs_xl <- dgvs_xl %>% filter(format(Period, "%Y") != "2024")
sum(is.na(dgvs_xl))
# Plot the series
ggplot(dgvs_xl, aes(x=Period, y=Value)) + geom_line() + labs(title="Time Series of DGVS Value", x="Period", y="Value")
#DECOMPISTION
cdgvs_ts_data <- ts(cdgvs_xl$Value, start=c(1992, 1), frequency=12)
decomposed_cdgvs <- decompose(cdgvs_ts_data)
plot(decomposed_cdgvs)
cgvs_ts_data <- ts(cgvs_xl$Value, start=c(1992, 1), frequency=12)
decomposed_cgvs <- decompose(cgvs_ts_data)
plot(decomposed_cgvs)
cngvs_ts_data <- ts(cngvs_xl$Value, start=c(1992, 1), frequency=12)
decomposed_cngvs <- decompose(cngvs_ts_data)
plot(decomposed_cngvs)
dgvs_ts_data <- ts(dgvs_xl$Value, start=c(1992, 1), frequency=12)
decomposed_dgvs <- decompose(dgvs_ts_data)
plot(decomposed_dgvs)
#ADF TESTS
cdgvs_adf_result <- adf.test(cdgvs_ts_data)
cdgvs_adf_result
cgvs_adf_result <- adf.test(cgvs_ts_data)
cgvs_adf_result
dgvs_adf_result <- adf.test(dgvs_ts_data)
dgvs_adf_result
cngvs_adf_result <- adf.test(cngvs_ts_data)
cngvs_adf_result
#All the series turned to be non staionary now we will difference them and test adf again\
series1_diff <- diff(cgvs_ts_data, differences = 1)
series2_diff <- diff(cdgvs_ts_data, differences = 1)
series3_diff <- diff(dgvs_ts_data, differences =1 )
series4_diff <- diff(cngvs_ts_data, differences = 1)
adf_test_series1 <- adf.test(series1_diff)
adf_test_series2 <- adf.test(series2_diff)
adf_test_series3 <- adf.test(series3_diff)
adf_test_series4 <- adf.test(series4_diff)
#NOW combining all the series together for VAR model
combined_ts <- cbind(cngvs_ts_data, cgvs_ts_data, cdgvs_ts_data, dgvs_ts_data)
str(combined_ts)
df_simplified <- combined_ts[, c('dgvs_ts_data', 'cgvs_ts_data', 'cdgvs_ts_data', 'cngvs_ts_data')]
# Fit the VAR(1) model
var1.model <- VAR(combined_ts, p = 1, type = "const")
summary(var1.model)
#For optimal lag for VAR Model
var_result <- VARselect(combined_ts, lag.max = 10, type = "both")
optimal_lag <- var_result$selection
print(optimal_lag)
# Fit the VAR(4) model based on the optimal lag length
var4.model <- VAR(combined_ts, p = 4, type = "const")
summary(var4.model)
#Forecasting the values
forecast <- predict(var4.model, n.ahead = 1, ci = 0.95) # ci is the confidence interval and I gave the threshhold of 0.95
print(forecast)
#Granger Test
granger_test <- causality(var4.model)
print(granger_test)
#Apply BigVAR with BASIC struct
combined_matrix <- cbind(cgvs_ts_data, cdgvs_ts_data, cngvs_ts_data, dgvs_ts_data)
sparse_var_fit <- BigVAR.fit(Y=combined_matrix,struct='Basic',p=2,lambda=1)[,,1]
print(sparse_var_fit)
summary(sparse_var_fit)
reprex()
rlang::last_trace()
reprex()
rlang::last_trace()
rlang::last_trace(drop = FALSE)
install.packages("styler")
reprex()
reprex()
reprex(std_out_err = TRUE)
install.packages("reprex")
install.packages("reprex")
reprex()
reprex()
library(vars)
library(readr)
library(tseries)
library(urca)
library(ggplot2)
library(reprex)
library(zoo)
library(dplyr)
library(tidyverse)
library(lubridate)
library(readxl)
library(vars)
library(BigVAR)
cdgvs_xl <- read_excel("C:\\Users\\Sree Lekshmi P\\Documents\\h4\\xlx\\CDGVS.xlsx")
cdgvs_xl$Value <- as.numeric(cdgvs_xl$Value)
cdgvs_xl <- cdgvs_xl %>% mutate(Period = as.Date(paste0(Period, "-01"), format="%b-%Y-%d"))
cdgvs_xl <- cdgvs_xl %>% filter(format(Period, "%Y") != "2024")
head(cdgvs_xl)
sum(is.na(cdgvs_xl))
ggplot(cdgvs_xl, aes(x=Period, y=Value)) + geom_line() + labs(title="Time Series of CDGVS Value", x="Period", y="Value")
cgvs_xl <- read_excel("C:\\Users\\Sree Lekshmi P\\Documents\\h4\\xlx\\CGVS.xlsx")
cgvs_xl$Value <- as.numeric(cgvs_xl$Value)
cgvs_xl <- cgvs_xl %>% mutate(Period = as.Date(paste0(Period, "-01"), format="%b-%Y-%d"))
head(cgvs_xl)
sum(is.na(cgvs_xl))
cgvs_xl <- cgvs_xl %>% filter(format(Period, "%Y") != "2024")
ggplot(cgvs_xl, aes(x=Period, y=Value)) + geom_line() + labs(title="Time Series of CGVS Value", x="Period", y="Value")
cngvs_xl <- read_excel("C:\\Users\\Sree Lekshmi P\\Documents\\h4\\xlx\\CNGVS.xlsx")
cngvs_xl$Value <- as.numeric(cngvs_xl$Value)
cngvs_xl <- cngvs_xl %>% mutate(Period = as.Date(paste0(Period, "-01"), format="%b-%Y-%d"))
head(cngvs_xl)
cngvs_xl <- cngvs_xl %>% filter(format(Period, "%Y") != "2024")
sum(is.na(cngvs_xl))
ggplot(cngvs_xl, aes(x=Period, y=Value)) + geom_line() + labs(title="Time Series of CNGVS Value", x="Period", y="Value")
dgvs_xl <- read_excel("C:\\Users\\Sree Lekshmi P\\Documents\\h4\\xlx\\DGVS.xlsx")
dgvs_xl$Value <- as.numeric(dgvs_xl$Value)
dgvs_xl <- dgvs_xl %>% mutate(Period = as.Date(paste0(Period, "-01"), format="%b-%Y-%d"))
head(dgvs_xl)
dgvs_xl <- dgvs_xl %>% filter(format(Period, "%Y") != "2024")
sum(is.na(dgvs_xl))
ggplot(dgvs_xl, aes(x=Period, y=Value)) + geom_line() + labs(title="Time Series of DGVS Value", x="Period", y="Value")
#DECOMPISTION
cdgvs_ts_data <- ts(cdgvs_xl$Value, start=c(1992, 1), frequency=12)
decomposed_cdgvs <- decompose(cdgvs_ts_data)
plot(decomposed_cdgvs)
cgvs_ts_data <- ts(cgvs_xl$Value, start=c(1992, 1), frequency=12)
decomposed_cgvs <- decompose(cgvs_ts_data)
plot(decomposed_cgvs)
cngvs_ts_data <- ts(cngvs_xl$Value, start=c(1992, 1), frequency=12)
decomposed_cngvs <- decompose(cngvs_ts_data)
plot(decomposed_cngvs)
dgvs_ts_data <- ts(dgvs_xl$Value, start=c(1992, 1), frequency=12)
decomposed_dgvs <- decompose(dgvs_ts_data)
plot(decomposed_dgvs)
#ADF TESTS
cdgvs_adf_result <- adf.test(cdgvs_ts_data)
cdgvs_adf_result
cgvs_adf_result <- adf.test(cgvs_ts_data)
cgvs_adf_result
dgvs_adf_result <- adf.test(dgvs_ts_data)
dgvs_adf_result
cngvs_adf_result <- adf.test(cngvs_ts_data)
cngvs_adf_result
#All the series turned to be non staionary now we will difference them and test adf again\
series1_diff <- diff(cgvs_ts_data, differences = 1)
series2_diff <- diff(cdgvs_ts_data, differences = 1)
series3_diff <- diff(dgvs_ts_data, differences =1 )
series4_diff <- diff(cngvs_ts_data, differences = 1)
adf_test_series1 <- adf.test(series1_diff)
adf_test_series2 <- adf.test(series2_diff)
adf_test_series3 <- adf.test(series3_diff)
adf_test_series4 <- adf.test(series4_diff)
#NOW combining all the series together for VAR model
combined_ts <- cbind(cngvs_ts_data, cgvs_ts_data, cdgvs_ts_data, dgvs_ts_data)
str(combined_ts)
df_simplified <- combined_ts[, c('dgvs_ts_data', 'cgvs_ts_data', 'cdgvs_ts_data', 'cngvs_ts_data')]
# Fit the VAR(1) model
var1.model <- VAR(combined_ts, p = 1, type = "const")
summary(var1.model)
#For optimal lag for VAR Model
var_result <- VARselect(combined_ts, lag.max = 10, type = "both")
optimal_lag <- var_result$selection
print(optimal_lag)
# Fit the VAR(4) model based on the optimal lag length
var4.model <- VAR(combined_ts, p = 4, type = "const")
summary(var4.model)
#Forecasting the values
forecast <- predict(var4.model, n.ahead = 1, ci = 0.95) # ci is the confidence interval and I gave the threshhold of 0.95
print(forecast)
#Granger Test
granger_test <- causality(var4.model)
print(granger_test)
#Apply BigVAR with BASIC struct
combined_matrix <- cbind(cgvs_ts_data, cdgvs_ts_data, cngvs_ts_data, dgvs_ts_data)
sparse_var_fit <- BigVAR.fit(Y=combined_matrix,struct='Basic',p=2,lambda=1)[,,1]
print(sparse_var_fit)
summary(sparse_var_fit)
reprex()
